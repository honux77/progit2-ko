[[_git_tools]]
//////////////////////////
== Git Tools
//////////////////////////
== Git 도구

//////////////////////////
By now, you’ve learned most of the day-to-day commands and workflows that you need to manage or maintain a Git repository for your source code control.
You’ve accomplished the basic tasks of tracking and committing files, and you’ve harnessed the power of the staging area and lightweight topic branching and merging.
//////////////////////////
지금까지 일상적으로 자주 사용하는 명령들과 몇 가지 워크플로를 배웠다.
파일을 추적하고 커밋하는 등의 기본적인 명령뿐만 아니라 Staging Area가 왜 좋은지도 배웠고 가볍게 토픽 브랜치를 만들고 Merge 하는 방법도 다뤘다. 이제는 Git 저장소로 충분히 소스코드를 관리할 수 있을 것이다.

//////////////////////////
Now you’ll explore a number of very powerful things that Git can do that you may not necessarily use on a day-to-day basis but that you may need at some point.
//////////////////////////
이 장에서는 일상적으로 사용하지는 않지만 위급한 상황에서 반드시 필요한 Git 도구를 살펴본다.

include::sections/revision-selection.asc[]

include::sections/interactive-staging.asc[]

include::sections/stashing-cleaning.asc[]

include::sections/signing.asc[]

include::sections/searching.asc[]

include::sections/rewriting-history.asc[]

include::sections/reset.asc[]

include::sections/advanced-merging.asc[]

include::sections/rerere.asc[]

include::sections/debugging.asc[]

include::sections/submodules.asc[]

include::sections/bundling.asc[]

include::sections/replace.asc[]

include::sections/credentials.asc[]

//////////////////////////
=== Summary
//////////////////////////
=== 요약

//////////////////////////
You’ve seen a number of advanced tools that allow you to manipulate your commits and staging area more precisely.
When you notice issues, you should be able to easily figure out what commit introduced them, when, and by whom.
If you want to use subprojects in your project, you’ve learned how to accommodate those needs.
At this point, you should be able to do most of the things in Git that you’ll need on the command line day to day and feel comfortable doing so.
//////////////////////////
커밋과 저장소를 꼼꼼하게 관리하는 도구를 살펴보았다.
문제가 생기면 바로 누가, 언제, 무엇을 했는지 찾아내야 한다.
그리고 프로젝트를 쪼개고 싶을 때 사용하는 방법들도 배웠다.
이제 Git 명령은 거의 모두 배운 것이다. 독자들이 하루빨리 익숙해져서 자유롭게 사용했으면 좋겠다.
