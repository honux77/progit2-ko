//////////////////////////
=== Git in Visual Studio
//////////////////////////
=== Visual Studio

(((Visual Studio)))
//////////////////////////
Starting with Visual Studio 2013 Update 1, Visual Studio users have a Git client built directly into their IDE.
Visual Studio has had source-control integration features for quite some time, but they were oriented towards centralized, file-locking systems, and Git was not a good match for this workflow.
Visual Studio 2013's Git support has been separated from this older feature, and the result is a much better fit between Studio and Git.
//////////////////////////
Visual Studio 2013 Update 1부터 Git 클라이언트가 Visual Studio에 들어갔다.
Visual Studio에도 오랫동안 버전관리 기능이 들어 있었다. 이 버전관리 시스템은 Git과는 방식이 다르다. 중앙 집중식이고 파일을 잠그는 방식이다.
Visual Studio 2013은 Git에 어울리는 워크플로를 따를 수 있도록 Git을 지원한다.

//////////////////////////
To locate the feature, open a project that's controlled by Git (or just `git init` an existing project), and select View > Team Explorer from the menu.
You'll see the "Connect" view, which looks a bit like this:
//////////////////////////
Git으로 관리하는 프로젝트나 `git init`을 해서 새로 관리하도록 설정한 프로젝트를 열면 이 기능을 사용할 수 있다. View > Team Explorer 메뉴를 선택한다.
그럼 "Connect" 뷰를 보여주는데 아래와 같이 생겼다.

//////////////////////////
.Connecting to a Git repository from Team Explorer.
image::images/vs-1.png[Connecting to a Git repository from Team Explorer.]
//////////////////////////
.Team Explorer에서 Git 저장소에 연결하기.
image::images/vs-1.png[Team Explorer에서 Git 저장소에 연결하기.]

//////////////////////////
Visual Studio remembers all of the projects you've opened that are Git-controlled, and they're available in the list at the bottom.
If you don't see the one you want there, click the "Add" link and type in the path to the working directory.
Double clicking on one of the local Git repositories leads you to the Home view, which looks like <<vs_home>>.
This is a hub for performing Git actions; when you're _writing_ code, you'll probably spend most of your time in the "Changes" view, but when it comes time to pull down changes made by your teammates, you'll use the "Unsynced Commits" and "Branches" views.
//////////////////////////
Visual Studio는 한 번 열었던 Git 프로젝트는 모두 저장해두기 때문에 하단에 있는 목록에서 찾을 수 있다.
찾는 프로젝트가 목록에 없으면 "Add" 링크를 클릭해서 워킹 디렉토리의 경로를 입력한다.
로컬 Git 저장소 중 하나를 더블 클릭하면 Home 뷰로 이동한다. Home 뷰는 <<vs_home>> 처럼 생겼다.
Home 뷰는 일종의 Git 센터다. 코드를 작성할 때는 "Changes" 뷰에서 많은 시간을 쓸 것이고 다른 동료가 커밋한 코드를 내려받을 때는 "Unsynced Commits"이나 "Branches" 뷰를 사용하게 된다.

[[vs_home]]
//////////////////////////
.The "Home" view for a Git repository in Visual Studio.
image::images/vs-2.png[The Home view for a Git repository in Visual Studio.]
//////////////////////////
.Visual Studio의 Git 센터 "Home" 뷰.
image::images/vs-2.png[Visual Studio의 Git 센터 Home 뷰.]

//////////////////////////
Visual Studio now has a powerful task-focused UI for Git.
It includes a linear history view, a diff viewer, remote commands, and many other capabilities.
For complete documentation of this feature (which doesn't fit here), go to http://msdn.microsoft.com/en-us/library/hh850437.aspx[].
//////////////////////////
Visual Studio에는 Git과 연동되는 Task-focused UI도 있다.
여기에는 히스토리 뷰, Diff 뷰어, 리모트 명령어 등등의 기능이 포함된다.
이 기능에 대한 자세한 문서는 http://msdn.microsoft.com/en-us/library/hh850437.aspx[]에 있다.
